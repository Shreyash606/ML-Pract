# -*- coding: utf-8 -*-
"""pract3_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/126ZlsLFDaP0sPpW41h9qDTeP06Xj5J_B
"""

from sklearn import linear_model
import matplotlib.pyplot as plt
import numpy as np
import random
def f(x):
    res = x* 25 + 3
    error = res * random.uniform(-0.12, 0.12) 
    return res + error
values = []
for i in range(0, 100):
    x = random.uniform(1, 1000)
    y = f(x)
    values.append((x, y))
    regr = linear_model.LinearRegression()
x, y = zip(*values)
print(x)
print(y)
max_x = max(x)
min_x = min(x)
train_data_X = list(map(lambda x: [x], list(x[:-20])))
train_data_Y = list(y[:-20])
test_data_X = list(map(lambda x: [x], list(x[-20:])))
test_data_Y = list(y[-20:])
regr.fit(train_data_X, train_data_Y)
m = regr.coef_[0]
b = regr.intercept_
print(' y = {0} * x + {1}'.format(m, b))
plt.scatter(x, y, color='blue')
plt.plot([min_x, max_x], [b, m*max_x + b], 'r')
plt.title('Fitted linear regression', fontsize=16)
plt.xlabel('x', fontsize=13)
plt.ylabel('y', fontsize=13)



print("Mean squared error: %.2f" % np.mean((regr.predict(test_data_X) - test_data_Y) ** 2))
print('Variance score: %.2f' % regr.score(test_data_X, test_data_Y))
